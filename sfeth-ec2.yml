AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  BucketName:
    Type: String
  
  KeyName:
    Type: String
    Description: Key name for SSH

  InstanceType:
    Type: String
    Description: ec2 instance type
    Default: t2.micro

Resources:
  SfEthExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Condition: {}
          Effect: Allow
          Principal: 
            Service: "ec2.amazonaws.com"
      Policies:
        - PolicyName: ecr-pull
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  -  "ecr:BatchGetImage"
                  -  "ecr:BatchCheckLayerAvailability"
                  -  "ecr:CompleteLayerUpload"
                  -  "ecr:GetDownloadUrlForLayer"
                  -  "ecr:InitiateLayerUpload"
                  -  "ecr:PutImage"
                  -  "ecr:UploadLayerPart"
                  -  "ecr:GetAuthorizationToken"
                Resource: "*"
        - PolicyName: s3-write
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  -  "s3:*"
                Resource: !Sub "arn:aws:s3:::${BucketName}/*"
                
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: ec2-ecr-pull-instance-profile
      Path: /
      Roles: 
       - !Ref SfEthExecutionRole

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      # Installs Docker
      UserData: 
        Fn::Base64: 
          !Sub |
             #!/bin/bash -xe
             sudo su
             yum update -y
             amazon-linux-extras install docker
             y
      InstanceType: !Ref InstanceType
      ImageId: ami-03ededff12e34e59e # Amazon Linux 2 Kernel 5.10 AMI 2.0.20220406.1 x86_64 HVM gp2
      IamInstanceProfile: !Ref Ec2InstanceProfile
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [webapp-security-group, dev]]
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  WebAppEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref EC2Instance
      Tags:
        - Key: Name
          Value: !Join ["-", [webapp-eip, dev]]